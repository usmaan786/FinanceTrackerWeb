@page
@model FinanceTrackerWeb.Pages.TransactionsModel
@{
}

<button id="link-button">Connect Bank Account</button>
<script src="https://cdn.plaid.com/link/v2/stable/link-initialize.js"></script>
<script>
    var linkHandler = Plaid.create({
        token: '@Model.LinkToken', // Dynamically populated
        onSuccess: function (public_token, metadata) {
            console.log('Public Token:', public_token);
            fetch('/api/plaid/exchange_token', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ PublicToken: public_token })
            })
                .then(response => response.json())
                .then(data => {
                    console.log('Access Token:', data.accessToken)
                    // Trigger syncing transactions once access token is saved
                    fetch('/api/plaid/sync_transactions', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            AccessToken: data.accessToken,
                            StartDate: '2024-01-01', // Replace with dynamic dates if needed
                            EndDate: '2024-12-31'
                        })
                    });
                });
        },
        onExit: function (err, metadata) {
            // Optional: handle the user exit event
        }
    });

    document.getElementById('link-button').onclick = function () {
        linkHandler.open();
    };
</script>

<div class="jumbotron p-3">
    <div class="d-flex align-items-center">
        <h1 class="display-4 flex-grow-1">
            Transaction Summary
        </h1>
    </div>

    <form method="get">
        <label class="control-label" asp-for="SortField">
            Sort by:
        </label>
        <select class="p-2" asp-for="SortField" onchange="this.form.submit();">
            <option value="Date" >Date</option>
            <option value="Amount">Amount</option>
        </select>
    </form>
</div>


<div class="d-flex bg-success text-white">
    <div class="p-2" style="flex:0 0 10%">
        Date
    </div>
    <div class="p-2" style="flex:0 0 10%">
        Transaction
    </div>
    <div class="p-2" style="flex:0 0 10%">
        Amount
    </div>
</div>

@foreach (var item in Model.Spendings)
{
    <div class="d-flex border-left border-right border-bottom border-primary">
        <div class="p-2" style="flex:0 0 10%">
            @Html.DisplayFor(modelItem => item.TransactionDate)
        </div>
        <div class="p-2" style="flex:0 0 10%">
            @item.Item
        </div>
        <div class="p-2" style="flex:1 0 auto">
            £ @item.Spent
        </div>
    </div>
}